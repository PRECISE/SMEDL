# This grammar defines A4SMEDL in the Grako-variation of EBNF.

@@grammar :: a4smedl

top
    =
    'System' system:identifier ':=' monitor_declaration:monitorDeclaration sync_set_declaration:syncSetDeclaration archSpec:architectureSpec$;

monitorDeclaration = interfaces+:{monitorInterface}+;

monitorInterface = 'Monitor' monitor_identifier:identifier '('params:parameter_list')'
   '{' 
       { 'imported' imported_events+:event_definition_list}
       {'exported' exported_events+:event_definition_list}*
   '}';

event_definition
    =
    creation:['creation'] error:['error'] event_id:identifier ['(' params:parameter_list ')'];

event_definition_list
    =
    @:event_definition {',' @:event_definition}* ';'
    ;

parameter_list
    =
      @:type {',' @:type}*
    | ()
    ;

type
    =
    ?/[a-zA-Z][A-Za-z0-9_]*/?
    ;

identifier
    =
    ?/[a-zA-Z][A-Za-z0-9_]*/?
    ;

integer
    =
    ?/[-+]?[0-9]+/?
    ;

syncSetDeclaration = 'Synchronous sets:' sync_sets+:{syncSetExpr}+;

syncSetExpr = set_identifier:identifier ':' monitor_list;

monitor_list = @:identifier {',' @:identifier}* ';';

architectureSpec = 'Channels:' conn_expr+:{connectionExpr}+;

connectionExpr = [connection:identifier ':'] [source_machine_identifier:identifier '.'] source_event_identifier:identifier '=>' target_machine_identifier:identifier'.'target_event_identifier:identifier ['{'pattern_spec:patternSpec'}'];

patternSpec = @:patternExpr {';' @:patternExpr}*;

patternExpr = left:term operator:('='|'<>') right:term;

term = term_id:identifier'['term_index:integer']';
