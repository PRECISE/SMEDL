object FloatComp;

state:
    float val;

events:
    imported newVal(float);
    exported match(float);
    exported mismatch(float, float);

scenarios:
    compare:
        finalstate second;
        init
            -> newVal(next) when (next == val) {raise match(val);}
            -> first
            else {raise mismatch(val, next); val = next;}
            -> first;
        first
            -> newVal(next) when (next == val) {raise match(val);}
            -> second
            else {raise mismatch(val, next);}
            -> second;
