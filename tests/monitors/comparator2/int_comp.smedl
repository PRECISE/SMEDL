object IntComp;

state:
    int val;

events:
    imported newVal(int);
    exported match(int);
    exported mismatch(int, int);

scenarios:
    compare:
        finalstate second;
        init
            -> newVal(next) when (next == val) {raise match(val);}
            -> first
            else {raise mismatch(val, next);}
            -> first;
        first
            -> newVal(next) when (next == val) {raise match(val);}
            -> second
            else {raise mismatch(val, next);}
            -> second;
